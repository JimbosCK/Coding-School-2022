@using FuelStation.Blazor.Shared.Services
@inject AppState AppState
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="home">FuelStation</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    @if (!AppState.LoggedIn)
    {
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="">
                <span class="oi oi-account-login" aria-hidden="true"></span> Log in
            </NavLink>
        </div>
    }
    else
    {
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="home">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="items">
                    <span class="oi oi-tag" aria-hidden="true"></span> Items
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Log out
                </NavLink>
            </div>
        </nav>
    }

</div>

@code {

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }
}
